{"version":3,"sources":["reportWebVitals.js","Reducer.js","index.js","data.js","Cart.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","id","name","quan","reducer","state","액션","type","found","findIndex","a","payload","copy","push","minu","store","createStore","combineReducers","Reducer","reducer2","ReactDOM","render","StrictMode","basename","process","App","document","getElementById","title","content","price","connect","alert열렸니","props","useState","alert","alertChange","Table","responsive","map","i","onClick","dispatch","className","Detail","lazy","재고context","React","createContext","Products","useContext","history","useHistory","shoe","src","width","alt","Test","재고","Data","shoes","shoesChange","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","res","data","catch","console","log","component","fallback","Cart"],"mappings":"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","file":"static/js/main.8540f9b2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\n\r\nlet 초기값 = [{id : 0, name: '멋진신발', quan: 2},\r\n{id:1, name: '매력적인 신발', quan:1},\r\n{id:2, name: '편한신발', quan: 3}];\r\n\r\n\r\nfunction reducer(state = 초기값, 액션){\r\n  if(액션.type === '항목추가'){\r\n    const found = state.findIndex((a)=>{ return a.id === 액션.payload.id}); \r\n\r\n    if(found >= 0){\r\n      let copy = [...state];\r\n      copy[found].quan++;\r\n      return copy;\r\n    }else{\r\n      let copy = [...state];\r\n      copy.push(액션.payload);\r\n      return copy;\r\n    }    \r\n  }else if( 액션.type === '수량증가'){\r\n    let copy = [...state];\r\n    copy[액션.payload].quan++\r\n    return copy\r\n\r\n  }else if( 액션.type === '수량감소'){\r\n    let minu = [...state];\r\n    minu[액션.payload].quan--\r\n    return minu\r\n  }else {\r\n  return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nimport Reducer from './Reducer';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션){\n  if( 액션.type === '변경'){\n    return state = false;\n  }else{\n  return state;\n  }\n}\n\nlet store = createStore(combineReducers({Reducer, reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>  \n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n","export default [\r\n  {\r\n    id : 0,\r\n    title : \"Blue\",\r\n    content : \"Made in France\",\r\n    price : '1,200,000'\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Yellow\",\r\n    content : \"Made in Seoul\",\r\n    price : '1,100,000'\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"White\",\r\n    content : \"Made in USA\",\r\n    price : '1,300,000'\r\n  }\r\n]","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport './Cart.scss';\r\n\r\nfunction Cart(props){\r\n  let [alert, alertChange] = useState(true);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.state.map((a, i)=>{\r\n              return(\r\n                <tr key={i}>\r\n                <td>{a.id}</td>\r\n                <td>{a.name}</td>\r\n                <td>{a.quan}</td>\r\n                <td>\r\n                  <button onClick={()=>{ props.dispatch({ type: '수량증가', payload: a.id }) }}>+</button>\r\n                  <button onClick={()=>{ props.dispatch({ type: '수량감소', payload: a.id }) }}>-</button>\r\n                </td>\r\n              </tr>\r\n              )\r\n            })       \r\n          }\r\n        </tbody>\r\n      </Table>\r\n      \r\n      {\r\n        alert === true \r\n        ?(<div className=\"my-alert2\">\r\n        <p>지금 구매하시면 신규할인 20%</p>\r\n        <button onClick={()=>{alertChange(false)}}>닫기</button>\r\n      </div>) \r\n      :null\r\n      }\r\n      {\r\n        props.alert열렸니 === true\r\n        ?(<div className=\"my-alert2\">\r\n        <p>지금 구매하시면 신규할인 20%</p>\r\n        <button onClick={()=>{props.dispatch({type:'변경'})}}>닫기</button>\r\n      </div> )\r\n      : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction state를props화(state){\r\n \r\n  return {\r\n    //상품명 : state.name\r\n    // reducer가 두개 이상 저장되면, props처럼 가져왔을 때 잘 저장해야된다. \r\n    // 지금 두개의 reducer가 저장되어 있다. \r\n    state : state.Reducer,\r\n    alert열렸니 : state.reducer2\r\n  }\r\n}\r\n//라이브러리 문법\r\nexport default connect(state를props화)(Cart)\r\n\r\n//export default Cart;","/* eslint-disable */\nimport React, {useContext, useState, lazy, Suspense} from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavDropdown, Jumbotron, Button } from 'react-bootstrap';\nimport Data from './data.js';\n//import Detail from './Detail.js';\nlet Detail = lazy(()=> import('./Detail.js'));\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory, BrowserRouter } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Cart from './Cart';\n\nexport let 재고context = React.createContext(); //같은 변수값을 공유할 범위생성\n\nfunction App() {\n\n  let [shoes, shoesChange] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">SHOES SHOP</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n\n      \n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1> SPRING BIG SALE <span className=\"percent\">[50% OFF ↓]</span>  </h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n\n           <재고context.Provider value={재고}>\n            <div className=\"row\">\n            \n            {\n              shoes.map((a,i)=>{\n                return (<Products shoe={a} i={i} key={i}/>)\n              })\n            }\n            </div>\n            </재고context.Provider>\n\n            <button className=\"btn btn-primary\" onClick={()=>{\n              //로딩 중이라는 UI 띄움\n\n\n              // 서버에 get 요청 axios.get(데이터요청할 url)\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((res)=>{\n                // 로딩중이라는 UI 안보이게 처리 \n\n                shoesChange([...shoes, ...res.data]);//자료 변경, 3개 자료 추가\n\n              }) // ajax 성공했을 때  \n              .catch(()=>{\n                console.log('실패했어요')\n              }) \n            }}>더보기\n            </button>\n          </div>\n      </Route>\n\n      <Route path=\"/detail/:id\" component={Detail}>\n        <재고context.Provider value={재고}>\n          <Suspense fallback={<div>로딩중이에요</div>}>\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n          </Suspense>\n         </재고context.Provider>\n      </Route>\n      {/*<Route path=\"/component\" component={Modal} ></Route>  route쓰는 다른 방법 컴포넌트만 보이게 함*/}\n      \n      <Route path=\"/cart\" component={Cart}>\n        <Cart></Cart>\n      </Route>\n    </BrowserRouter>\n\n    \n    {/* 추가할 기능\n    1.로딩 중 UI 만들기 2.보여줄 상품이 마지막에 도달했을 때 버튼 숨기기\n    3. ajax post로 요청하는 경우 찾아보기! \n     */}\n           \n    </div>\n  );\n  \n}\n  \n  function Products(props){\n\n    let 재고 = useContext(재고context);\n    let history = useHistory();\n    return (\n      \n      <div className=\"col-md-4 img\" onClick={()=>{history.push('detail/' + props.shoe.id)}}>\n        \n        <img src={'https://codingapple1.github.io/shop/shoes'+ (props.i + 1) +'.jpg' } width=\"100%\" alt=\"사진\"/>\n        <h4>{props.shoe.title}</h4>\n        <p>\n          {props.shoe.content}<br/>\n          {props.shoe.price}\n        </p>\n        \n        <Test></Test>\n      </div>\n     \n    )\n  }\n  function Test(){\n    let 재고 = useContext(재고context);\n    return <p>{재고[0]}</p>\n  }\n\n\nexport default App;\n"],"sourceRoot":""}