{"version":3,"sources":["images/chair1.jpg","Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","console","log","Reducer","alert열렸니","reducer2","useState","alert","alertChange","누른탭변경","스위치","useContext","재고context","timer","setTimeout","clearTimeout","history","useHistory","id","useParams","찾은상품","shoes","find","상품","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","className","src","width","alt","title","content","price","onClick","copyArr","재고변경","dispatch","type","payload","name","quan","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout"],"mappings":"+KAAe,I,0DCWXA,EAAKC,IAAOC,IAAV,iDAGFC,EAAKF,IAAOG,GAAV,8DAEM,SAAAC,GAAK,OAAIA,EAAMC,gBAsG3B,SAASC,EAAWF,GAMlB,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGG,IAAdJ,EAAMK,mBACA,gFACc,IAAdL,EAAMK,mBACN,iFACc,IAAdL,EAAMK,mBACN,sFADH,EAKR,SAASC,EAAKN,GACZ,OACE,+CAAQA,EAAMO,aAAG,MAeNC,uBAXf,SAAsBC,GAEpB,OADAC,QAAQC,IAAIF,EAAMG,SACX,CAILH,MAAQA,EAAMG,QACdC,0BAAWJ,EAAMK,YAINN,EAjIf,SAAgBR,GAAO,IAAD,EACOe,oBAAS,GADhB,mBACfC,EADe,KACRC,EADQ,OAEDF,mBAAS,GAFR,mBAEfV,EAFe,KAEVa,EAFU,OAGDH,oBAAS,GAHR,mBAGfI,EAHe,KAGVf,EAHU,KAKhBG,EAAKa,qBAAWC,KAGpBlB,qBAAU,WAGR,IAAImB,EAAQC,YAAW,WACrBN,GAAY,KACX,KAEH,OAAO,WAAOO,aAAaF,MAC3B,CAACN,IAEH,IAAIS,EAAUC,cACRC,EAAOC,cAAPD,GACFE,EAAO7B,EAAM8B,MAAMC,MAAK,SAASC,GACnC,OAAOA,EAAGL,IAAMA,KAiBlB,OAfAxB,qBAAU,WACR,IAAI8B,EAAMC,aAAaC,QAAQ,YACdF,EAAP,MAAPA,EAAoB,GAEjBG,KAAKC,MAAMJ,IACbK,KAAKX,GACTM,EAAM,IAAIM,IAAIN,GACdA,EAAG,YAAOA,GAEVC,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,MAC9C,IAMC,sBAAKS,UAAU,YAAf,UACI,cAAC/C,EAAD,UACE,cAACG,EAAD,CAAI4C,UAAU,MAAd,yCAGU,IAAV1B,EACG,qBAAK0B,UAAU,YAAf,SACD,+GAGA,KAIJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAK,iDAAmDC,MAAM,OAAOC,IAAI,mBAGhF,sBAAKH,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBb,EAAKiB,QAC3B,4BAAIjB,EAAKkB,UACT,4BAAIlB,EAAKmB,QAET,cAAC1C,EAAD,CAAMC,eAAIP,EAAMO,eAChB,wBAAQmC,UAAU,iBAAiBO,QAAS,WAC1C,IAAIC,EAAO,YAAOlD,EAAMO,cACxB2C,EAAQ,GAAK,EACblD,EAAMmD,yBAAKD,GACXlD,EAAMoD,SAAS,CAACC,KAAO,2BAAQC,QAAU,CAAC3B,GAAGE,EAAKF,GAAI4B,KAAM1B,EAAKiB,MAAOU,KAAM,KAC9E/B,EAAQa,KAAK,UALf,sCANF,OAeE,wBAAQI,UAAU,iBAAiBO,QAAS,WACxCxB,EAAQa,KAAK,MADjB,yCApBJ,2CAyBwB/B,EAAG,MAG3B,eAACkD,EAAA,EAAD,CAAKf,UAAU,OAAOgB,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAACF,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAII,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAK/B,EAAM,GAAId,GAAM,IAA1D,wCAEF,cAACqD,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAII,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAK/B,EAAM,GAAId,GAAM,IAA1D,2CAGJ,cAAC2D,EAAA,EAAD,CAAeC,GAAI7C,EAAK8C,WAAW,MAAMC,QAAS,IAAlD,SACE,cAAChE,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.3b0f8fa9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chair1.434356ea.jpg\";","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport image from './images/chair1.jpg';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {재고context} from './App.js';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\n// 컴포넌트를 만드는데, CSS를 미리 입혀놓은 컴포넌트 (className 작명 필요없음) style이 귀속된 컴포넌트\r\nlet 박스 = styled.div`\r\n  padding : 20px;  \r\n`;\r\nlet 제목 = styled.h4`\r\n font-size : 25px;\r\n color : ${ props => props.색상 }\r\n`; \r\n\r\n\r\n\r\nfunction Detail(props){\r\n  let [alert, alertChange] = useState(true);\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  let 재고 = useContext(재고context);\r\n  \r\n  \r\n  useEffect(()=>{\r\n\r\n    // 2초후에 alert 창을 안보이게 하려면 \r\n    let timer = setTimeout(()=>{\r\n      alertChange(false)\r\n    }, 2000);\r\n    \r\n    return ()=> { clearTimeout(timer) }\r\n  },[alert]);\r\n // let [inputDate, inputDate변경] = useState('');\r\n  let history = useHistory(); // 방문 기록 등을 저장해놓는 object. useHistory hook 사용\r\n  let { id } = useParams();\r\n  let 찾은상품 = props.shoes.find(function(상품){\r\n    return 상품.id == id\r\n  });\r\n  useEffect(()=>{\r\n    var arr = localStorage.getItem('watched');\r\n    if(arr == null) {arr = [];}\r\n    else{\r\n    arr = JSON.parse(arr);}\r\n    arr.push(id);\r\n    arr = new Set(arr);\r\n    arr = [...arr];  // 소괄호를 벗겨서 []안에 넣어주세요.\r\n\r\n    localStorage.setItem('watched', JSON.stringify(arr));\r\n  }, []);\r\n\r\n  \r\n  \r\n\r\n  return (\r\n      <div className=\"container\">\r\n          <박스>\r\n            <제목 className=\"red\">상세상품</제목>\r\n          </박스>\r\n          {\r\n            alert === true \r\n            ? (<div className=\"my-alert2\" >\r\n              <p>재고가 얼마 남지 않았습니다.</p>\r\n              </div>\r\n            )\r\n            : null \r\n          }\r\n          \r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={'https://codingapple1.github.io/shop/shoes1.jpg' } width=\"100%\" alt=\"사진\"/>\r\n            </div>\r\n            \r\n            <div className=\"col-md-6 mt-4\">\r\n              <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n              <p>{찾은상품.content}</p>\r\n              <p>{찾은상품.price}</p>\r\n\r\n              <Info 재고={props.재고}></Info>\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                let copyArr = [...props.재고];\r\n                copyArr[0] = 9\r\n                props.재고변경(copyArr);\r\n                props.dispatch({type : '항목추가', payload : {id:찾은상품.id, name: 찾은상품.title, quan: 1}})\r\n                history.push('/cart');\r\n              }\r\n              }>주문하기</button>\r\n              &nbsp;\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                  history.push('/');\r\n                  {/*특정 경로로 이동시키려면 history.push('/')*/} \r\n              }}>뒤로가기</button>  \r\n            </div>\r\n             재고(contextAPI 연습) : {재고[0]} \r\n          </div>\r\n\r\n          <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\" onClick={()=>{누른탭변경(0); 스위치변경(false)}}>상품설명</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" onClick={()=>{누른탭변경(1); 스위치변경(false)}}>배송정보</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>   \r\n          <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n            <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>    \r\n          </CSSTransition>\r\n\r\n      </div> \r\n  )\r\n}\r\n// div 도 object. jsx 문법! \r\nfunction TabContent(props){\r\n\r\n  useEffect(()=>{\r\n    props.스위치변경(true)\r\n  });\r\n\r\n  if(props.누른탭 === 0){\r\n    return <div>0번째 내용입니다.</div>\r\n  }else if(props.누른탭 === 1){\r\n    return <div>1번째 내용입니다. </div>\r\n  }else if(props.누른탭 === 2){\r\n    return <div>2번째 내용입니다. </div>\r\n  }\r\n}\r\n\r\nfunction Info(props){\r\n  return (\r\n    <p>재고 :{props.재고[0]}</p>\r\n  )\r\n}\r\n\r\nfunction state를props화(state){\r\n  console.log(state.Reducer);\r\n  return {\r\n    //상품명 : state.name\r\n    // reducer가 두개 이상 저장되면, props처럼 가져왔을 때 잘 저장해야된다. \r\n    // 지금 두개의 reducer가 저장되어 있다. \r\n    state : state.Reducer,\r\n    alert열렸니 : state.reducer2\r\n  }\r\n}\r\n\r\nexport default connect(state를props화)(Detail)\r\n\r\n//export default Detail;"],"sourceRoot":""}